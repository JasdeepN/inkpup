name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start server
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3002
        run: |
          PORT=3002 npm run start &
          npx wait-on http://localhost:3002

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests for matrix browser
        id: playwright
        run: npx playwright test --project=${{ matrix.browser }} --trace=retain-on-failure --reporter=dot

      - name: Check for Playwright traces
        id: check_traces
        run: |
          # find any trace.zip generated by Playwright under test-results
          set -e
          shopt -s globstar || true
          if compgen -G "test-results/**/trace.zip" >/dev/null 2>&1; then
            echo "has_traces=true" >> $GITHUB_OUTPUT
          else
            echo "has_traces=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report

      - name: Upload Playwright JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-junit-${{ matrix.browser }}
          path: test-results/junit-results.xml

      - name: Publish JUnit results as annotations
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Playwright E2E
          path: test-results/junit-results.xml
          reporter: junit

      - name: Upload Playwright traces (only when present and on failure)
        if: ${{ steps.check_traces.outputs.has_traces == 'true' && steps.playwright.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.browser }}
          path: |
            test-results/**/trace.zip
